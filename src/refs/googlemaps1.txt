import clsx from "clsx";
import { reduxForm, InjectedFormProps } from "redux-form";
import { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';
import Button from "shared/components/Button";
import React, { useState } from "react";

interface AddRestaurantFormProps {
  className?: string
}

interface MyFormValuesprops {

}

const containerStyle = {
  width: '100%',
  height: '400px'
};

const center = {
  lat: -3.745,
  lng: -38.523
};


type FinalProps = InjectedFormProps<AddRestaurantFormProps, MyFormValuesprops> & AddRestaurantFormProps


function AddRestaurantForm({ className, handleSubmit, initialize }: FinalProps) {
  const { isLoaded } = useJsApiLoader({
    googleMapsApiKey: "AIzaSyB7LXBliP9xH-Y-Cj60iocPucVTa5dL4uo"
  })

  const [location, setLocation] = useState({ lat: 48.8584, lng: 2.2945 })
  const [map, setMap] = React.useState(null)

  function getCoords() {
    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition(function (position) {
        const latitude = position.coords.latitude;
        const longitude = position.coords.longitude;

        setLocation({ lat: latitude, lng: longitude })
        console.log("Latitude: " + latitude);
        console.log("Longitude: " + longitude);
      }, function (error) {
        console.error("Error getting location: " + error.message);
      });
    } else {
      console.log("Geolocation is not supported in this browser.");
    }

  }



  return (
    <div className={clsx("add-restaurant-form-container", className)}>
      <h1>Basic Details</h1>
      {isLoaded && <GoogleMap
        mapContainerStyle={{ width: '100%', height: '400px' }}
        center={location}
        zoom={10}

      >
        <Marker position={location} />
      </GoogleMap>}
      <Button label="check location" onClick={getCoords} />
    </div>)
}

export default reduxForm<MyFormValuesprops, AddRestaurantFormProps>({
  form: 'AddResturantReduxForm',
})(AddRestaurantForm);
